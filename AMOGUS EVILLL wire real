import pygame
import random
import time
import pygame.freetype
pygame.init()
pygame.display.set_caption("Wire task")
screen = pygame.display.set_mode((800,800))
screen.fill((0,0,0))
# font = pygame.freetype.Font("amatic.ttf", 80)

#colooorssss/ variables
YELLOW = (250,250,0)
RED = (200,0,0)
PINK = (200,0,200)
BLUE = (0,0,200)
WHITE = (255,255,255)
xpos = 0
ypos = 0
mousePos = (xpos, ypos) #variable mousePos stores TWO numbers
draw = False


numLines = 0 #variavle to keep track of number of lines so we only draw one at a time
BoxList = [] #list that holds the box objects
LWireList = []
RWireList = []

StartBox = 0
EndBox = 0

#lists that hold positions and colors of wire boxes
LeftPositions = [(0,100),(0,300),(0,500),(0,700)]
RightPositions = [(750,100),(750,300),(750,500),(750,700)]


LeftColors = [RED, YELLOW, PINK, BLUE]
RightColors = [RED, YELLOW, PINK, BLUE]

random.shuffle(LeftPositions)
random.shuffle(RightPositions)
random.shuffle(LeftColors)
random.shuffle(RightColors)


mouseDown = False
mousePos = (0,0)


def collision(xpos, ypos, x , y):
    if x < xpos + 100 and x > xpos and y > ypos and y < ypos + 50:
        return True
    else:
        return False
    

class Box():
    def __init__(self,position, color):
        self.position = position
        self.color = color
        self.connected = False
        self.clicked = False
        self.hovering = False
    def isHovering(self,MouseX, MouseY):
        if collision(self.position[0], self.position[1],MouseX, MouseY) == True:
            self.hovering = True
        else:
            self.hovering = False
    def draw(self):
        pygame.draw.rect(screen, self.color, (self.position[0],self.position[1], 100, 50))
        if self.hovering == True:
                         pygame.draw.rect(screen, (255, 255, 255), (self.position[0], self.position[1], 100,50), 2)
    
    
    
            #pygame.draw.rect(screen, self.PINK, (LeftPositions[0][0],LeftPositions[0][1] ,50, 50))
            #pygame.draw.rect(screen, self.PINK, (RightPositions[0][0],RightPositions[0][1] , 750, 50))
#RIGHT POSITION-------------------------------------------------------------------------------
    
for i in range(4):
    BoxList.append(Box(LeftPositions[i], LeftColors[i]))
    BoxList.append(Box(RightPositions[i], RightColors[i]))
        
        

#gameloop###################################################
while True:
#event queue (bucket that holds stuff that happens in game and passes to one of the sections below)
    event = pygame.event.wait()
#update/timer section---------------------------------------
    if event.type == pygame.QUIT:
        break
    #add other colors here!
#input section----------------------------------------------
    if event.type == pygame.MOUSEBUTTONDOWN:
        mouseDown = True
                       
    if event.type == pygame.MOUSEBUTTONUP:
        mouseDown = False
               
    if event.type == pygame.MOUSEMOTION: #check if mouse moved
        mousePos = event.pos #refreshes mouse position
        
    
    for l in range(len(BoxList)):
        BoxList[l].isHovering(mousePos[0], mousePos[1])
#render section---------------------------------------------
        
    screen.fill((0,0,0))
        
    for j in range(len(BoxList)):
        BoxList[j].draw()

    
    pygame.display.flip()

#end game loop##############################################

pygame.quit()
